* Install
easy_install SQLAlchemy
easy_install Flask
git clone https://github.com/jackgill/modoverflow.git
* SQLite
To create the database:
python
>>> from modoverflow import database
>>> database.init_db()

SELECT name FROM sqlite_master WHERE type='table' ORDER BY name;
ALTER TABLE Questions ADD is_answered INTEGER;
* Database tables
All columns are NOT NULL unless otherwise noted.
PK = Primary Key
FK = Foreign Key
** Users
|---------+------------+-----------+---------------+-------------------+------+----------|
| Id (PK) | First Name | Last Name | Email Address | Password (hashed) | Salt | Is_Admin |
|---------+------------+-----------+---------------+-------------------+------+----------|
** Questions
|---------+-------+-------------------------+------+-------+-------------|
| Id (PK) | Title | Submitter_Id (FK Users) | Body | Votes | Is_Answered |
|---------+-------+-------------------------+------+-------+-------------|
** Answers
|---------+----------------------------+-------------------------+------+-------+-------------|
| Id (PK) | Question_Id (FK Questions) | Submitter_Id (FK Users) | Text | Votes | Is_Accepted |
|---------+----------------------------+-------------------------+------+-------+-------------|
** Comments
|---------+--------------------------------------+----------------------------------+-------------------------+------+-------|
| Id (PK) | Question_Id (FK Questions, Nullable) | Answer_Id (FK Answers, Nullable) | Submitter_Id (FK Users) | Text | Votes |
|---------+--------------------------------------+----------------------------------+-------------------------+------+-------|
** VotingHistory
|---------+--------------------+----------------------------+-------------------------+--------------------------|
| Id (PK) | User_Id (FK Users) | Question_Id (FK Questions) | Answer_Id  (FK Answers) | Comment_Id (FK Comments) |
|---------+--------------------+----------------------------+-------------------------+--------------------------|
* Pages
** Splash page
** Leaderboards
** Search page
** Submit a Question page
** Question page
** Login page
** Create account page
* Todo
- accepted answer should always be first
- need better error message for when users aren't logged in but attempt to ask/answer questions
- add comments
  - two classes/tables? QuestionComment and AnswerComment?
- need multiple views of questions - newest, most votes, etc
- need pagination for questions and answers
- script to generate questions and answers based on shakespeare
- questions / answers need timestamps
- support question / answer version, editing? separate content table?
- theme: dark background, use solarized for colors? custom font. use leaves, orange/gold fall theme.
- limit users to one vote per entity
